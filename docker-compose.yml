version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: safepathai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: safepathai
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - safepathai-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safepathai-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/safepathai?authSource=admin
      JWT_ACCESS_SECRET: your_jwt_access_secret_change_this_in_production
      JWT_REFRESH_SECRET: your_jwt_refresh_secret_change_this_in_production
      FRONTEND_URL: http://localhost:3000
      # Add your API keys here
      OPENAI_API_KEY: your_openai_api_key_here
      MAPBOX_API_KEY: your_mapbox_api_key_here
      TWILIO_ACCOUNT_SID: your_twilio_account_sid
      TWILIO_AUTH_TOKEN: your_twilio_auth_token
      TWILIO_PHONE_NUMBER: your_twilio_phone_number
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - safepathai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: safepathai-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      VITE_API_URL: http://localhost:4000/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - safepathai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local

# Custom network for service communication
networks:
  safepathai-network:
    driver: bridge
